<?php

namespace ContainerP6Dryyl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSession_Handler_LegacyBridgeService extends App_KernelProdContainer
{
    /*
     * Gets the private 'session.handler.legacy_bridge' shared autowired service.
     *
     * @return \App\Security\Session\LegacyBridgeSessionHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/Handler/AbstractSessionHandler.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/Handler/StrictSessionHandler.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Security/Session/LegacyBridgeSessionHandler.php';
        include_once \dirname(__DIR__, 3).'/vendor/symfony/http-foundation/Session/Storage/Handler/NativeFileSessionHandler.php';

        return $container->privates['session.handler.legacy_bridge'] = new \App\Security\Session\LegacyBridgeSessionHandler(new \Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler(NULL), ($container->privates['App\\Engine\\LegacyHandler\\DefaultLegacyHandler'] ?? $container->load('getDefaultLegacyHandlerService')));
    }
}
