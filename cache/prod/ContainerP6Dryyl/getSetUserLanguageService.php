<?php

namespace ContainerP6Dryyl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSetUserLanguageService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\UserPreferences\LegacyHandler\SetUserLanguage' shared autowired service.
     *
     * @return \App\UserPreferences\LegacyHandler\SetUserLanguage
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/core/backend/Process/Service/ProcessHandlerInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/UserPreferences/LegacyHandler/SetUserLanguage.php';

        $a = ($container->privates['App\\Authentication\\LegacyHandler\\UserHandler'] ?? $container->load('getUserHandlerService'));

        if (isset($container->privates['App\\UserPreferences\\LegacyHandler\\SetUserLanguage'])) {
            return $container->privates['App\\UserPreferences\\LegacyHandler\\SetUserLanguage'];
        }

        return $container->privates['App\\UserPreferences\\LegacyHandler\\SetUserLanguage'] = new \App\UserPreferences\LegacyHandler\SetUserLanguage(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'SCRMSESSID', 'SCRMSESSID', ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ??= new \App\Engine\LegacyHandler\LegacyScopeState()), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), $a);
    }
}
