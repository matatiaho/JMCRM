<?php

namespace ContainerP6Dryyl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getNavbarHandlerService extends App_KernelProdContainer
{
    /*
     * Gets the private 'App\Navbar\LegacyHandler\NavbarHandler' shared autowired service.
     *
     * @return \App\Navbar\LegacyHandler\NavbarHandler
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/core/backend/Routes/Service/NavigationProviderInterface.php';
        include_once \dirname(__DIR__, 3).'/core/backend/Navbar/LegacyHandler/NavbarHandler.php';

        return $container->privates['App\\Navbar\\LegacyHandler\\NavbarHandler'] = new \App\Navbar\LegacyHandler\NavbarHandler(\dirname(__DIR__, 3), (\dirname(__DIR__, 3).'/public/legacy'), 'SCRMSESSID', 'SCRMSESSID', ($container->privates['App\\Engine\\LegacyHandler\\LegacyScopeState'] ??= new \App\Engine\LegacyHandler\LegacyScopeState()), $container->parameters['legacy.menu_item_map'], ($container->privates['App\\Module\\LegacyHandler\\ModuleNameMapperHandler'] ?? self::getModuleNameMapperHandlerService($container)), ($container->privates['App\\Routes\\LegacyHandler\\RouteConverterHandler'] ?? self::getRouteConverterHandlerService($container)), ($container->privates['App\\Module\\LegacyHandler\\ModuleRegistryHandler'] ?? $container->load('getModuleRegistryHandlerService')), ($container->services['request_stack'] ??= new \Symfony\Component\HttpFoundation\RequestStack()), $container->parameters['legacy.module_routing'], $container->parameters['navbar.administration_override'], $container->parameters['quick_actions']);
    }
}
