<?php

namespace ContainerP6Dryyl;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiPlatform_Graphql_FieldsBuilderService extends App_KernelProdContainer
{
    /*
     * Gets the private 'api_platform.graphql.fields_builder' shared service.
     *
     * @return \ApiPlatform\GraphQl\Type\FieldsBuilder
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/FieldsBuilderInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/FieldsBuilderEnumInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/FieldsBuilder.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/ContextAwareTypeBuilderInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypeBuilder.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Resolver/ResourceFieldResolver.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypeConverterInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypeConverter.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Resolver/Factory/ResolverFactoryInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Resolver/Factory/ResolverFactory.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/State/Provider/ResolverProvider.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Symfony/Validator/State/ValidateProvider.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/State/Provider/DenormalizeProvider.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Util/ArrayTrait.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Resolver/Util/IdentifierTrait.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/State/Provider/ReadProvider.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Serializer/SerializerContextBuilderInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Serializer/SerializerContextBuilder.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/State/ProcessorInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/State/Processor/WriteProcessor.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/State/Processor/SubscriptionProcessor.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/State/Processor/NormalizeProcessor.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Subscription/SubscriptionManagerInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Subscription/OperationAwareSubscriptionManagerInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/Metadata/Util/SortTrait.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Subscription/SubscriptionManager.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Subscription/SubscriptionIdentifierGeneratorInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Subscription/SubscriptionIdentifierGenerator.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypesContainerInterface.php';
        include_once \dirname(__DIR__, 3).'/vendor/api-platform/core/src/GraphQl/Type/TypesContainer.php';

        $a = ($container->privates['api_platform.metadata.property.metadata_factory.cached'] ?? self::getApiPlatform_Metadata_Property_MetadataFactory_CachedService($container));
        $b = ($container->privates['api_platform.metadata.resource.metadata_collection_factory.cached'] ?? self::getApiPlatform_Metadata_Resource_MetadataCollectionFactory_CachedService($container));
        $c = ($container->privates['api_platform.graphql.types_container'] ??= new \ApiPlatform\GraphQl\Type\TypesContainer());
        $d = ($container->privates['api_platform.symfony.iri_converter'] ?? self::getApiPlatform_Symfony_IriConverterService($container));
        $e = ($container->privates['api_platform.pagination'] ?? $container->load('getApiPlatform_PaginationService'));

        $f = new \ApiPlatform\GraphQl\Type\TypeBuilder($c, new \ApiPlatform\GraphQl\Resolver\ResourceFieldResolver($d), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'api_platform.graphql.fields_builder' => ['privates', 'api_platform.graphql.fields_builder', 'getApiPlatform_Graphql_FieldsBuilderService', true],
        ], [
            'api_platform.graphql.fields_builder' => '?',
        ]), $e);
        $g = ($container->privates['serializer.name_converter.metadata_aware'] ?? self::getSerializer_NameConverter_MetadataAwareService($container));

        $h = new \ApiPlatform\GraphQl\Serializer\SerializerContextBuilder($g);
        $i = ($container->privates['api_platform.security.resource_access_checker'] ?? self::getApiPlatform_Security_ResourceAccessCheckerService($container));
        $j = ($container->privates['serializer'] ?? self::getSerializerService($container));
        $k = new \ApiPlatform\GraphQl\State\Processor\NormalizeProcessor($j, $h, $e);

        return $container->privates['api_platform.graphql.fields_builder'] = new \ApiPlatform\GraphQl\Type\FieldsBuilder(($container->privates['api_platform.metadata.property.name_collection_factory.cached'] ?? self::getApiPlatform_Metadata_Property_NameCollectionFactory_CachedService($container)), $a, $b, ($container->privates['api_platform.resource_class_resolver'] ?? self::getApiPlatform_ResourceClassResolverService($container)), $c, $f, new \ApiPlatform\GraphQl\Type\TypeConverter($f, $c, $b, $a), new \ApiPlatform\GraphQl\Resolver\Factory\ResolverFactory(new \ApiPlatform\GraphQl\State\Provider\ResolverProvider(new \ApiPlatform\Symfony\Security\State\AccessCheckerProvider(new \ApiPlatform\Symfony\Validator\State\ValidateProvider(new \ApiPlatform\Symfony\Security\State\AccessCheckerProvider(new \ApiPlatform\GraphQl\State\Provider\DenormalizeProvider(new \ApiPlatform\State\Provider\ParameterProvider(new \ApiPlatform\Symfony\Security\State\AccessCheckerProvider(new \ApiPlatform\GraphQl\State\Provider\ReadProvider(($container->privates['api_platform.state_provider.locator'] ?? self::getApiPlatform_StateProvider_LocatorService($container)), $d, $h, '_'), $i), ($container->privates['.service_locator.sL05zc0'] ?? self::get_ServiceLocator_SL05zc0Service($container))), $j, $h), $i, 'post_denormalize'), ($container->privates['api_platform.validator'] ?? $container->load('getApiPlatform_ValidatorService'))), $i, 'post_validate'), new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'App\\Data\\Resolver\\RecordItemResolver' => ['privates', 'App\\Data\\Resolver\\RecordItemResolver', 'getRecordItemResolverService', true],
            'App\\Data\\Resolver\\RecordListResolver' => ['privates', 'App\\Data\\Resolver\\RecordListResolver', 'getRecordListResolverService', true],
            'App\\Statistics\\Resolver\\BatchedStatisticsItemResolver' => ['privates', 'App\\Statistics\\Resolver\\BatchedStatisticsItemResolver', 'getBatchedStatisticsItemResolverService', true],
            'App\\Statistics\\Resolver\\StatisticsItemResolver' => ['privates', 'App\\Statistics\\Resolver\\StatisticsItemResolver', 'getStatisticsItemResolverService', true],
        ], [
            'App\\Data\\Resolver\\RecordItemResolver' => '?',
            'App\\Data\\Resolver\\RecordListResolver' => '?',
            'App\\Statistics\\Resolver\\BatchedStatisticsItemResolver' => '?',
            'App\\Statistics\\Resolver\\StatisticsItemResolver' => '?',
        ])), new \ApiPlatform\State\Processor\WriteProcessor(new \ApiPlatform\GraphQl\State\Processor\SubscriptionProcessor($k, new \ApiPlatform\GraphQl\Subscription\SubscriptionManager(($container->privates['api_platform.graphql.cache.subscription'] ?? $container->load('getApiPlatform_Graphql_Cache_SubscriptionService')), new \ApiPlatform\GraphQl\Subscription\SubscriptionIdentifierGenerator(), NULL, $d, $b, $k), NULL), ($container->privates['api_platform.state_processor.locator'] ?? $container->load('getApiPlatform_StateProcessor_LocatorService')))), NULL, NULL, NULL, ($container->privates['api_platform.filter_locator'] ??= new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [], [])), $e, $g, '_');
    }
}
